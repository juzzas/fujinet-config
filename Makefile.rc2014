TARGET_EXEC ?= fnconfig.com

BUILD_DIR ?= ./build
SRC_DIRS ?= ./src

#ADDL_DIR1 := ../eoslib/src
#ADDL_DIR2 := ../smartkeyslib/src
#
#ADDL_LIB1 := ../eoslib/eos.lib
#ADDL_LIB2 := ../smartkeyslib/smartkeys.lib

CC=zcc
AS=zcc

SRCS := $(shell find $(SRC_DIRS) -name *.cpp -or -name *.c -or -name *.asm)
OBJS := $(SRCS:%=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)

#CFLAGS=+rc2014 -subtype=cpm -DBUILD_RC2014
#LDFLAGS=+rc2014 -subtype=cpm -create-app -o$(TARGET_EXEC)
#ASFLAGS=+rc2014 -subtype=cpm

CFLAGS=+cpm -DBUILD_RC2014 -clib=ansi -pragma-redirect:fputc_cons=fputc_cons_generic
LDFLAGS=+cpm -create-app -o$(TARGET_EXEC)
ASFLAGS=+cpm

INC_DIRS := $(shell find $(SRC_DIRS) -type d)
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

$(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS)
	#cp autorun.ddp ../fujinet-platformio/data/BUILD_ADAM/

# c source
$(BUILD_DIR)/%.c.o: %.c
	$(MKDIR_P) $(dir $@)
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

# asm source
$(BUILD_DIR)/%.asm.o: %.asm
	$(MKDIR_P) $(dir $@)
	$(AS) $(ASFLAGS) -c $< -o $@

.PHONY: clean

clean:
	$(RM) -r FNCONFIG* fnconfig* $(BUILD_DIR)

-include $(DEPS)

MKDIR_P ?= mkdir -p
